// backend/test/vulnerabilityRoutes.test.js

const request = require('supertest');
const express = require('express');
const bodyParser = require('body-parser');
const vulnerabilityRoutes = require('../routes/vulnerabilityRoutes');

// Create an instance of express app for testing
const app = express();
app.use(bodyParser.json());
app.use('/api/vulnerabilities', vulnerabilityRoutes);

describe('Vulnerability Routes', () => {
  it('GET /api/vulnerabilities should return vulnerabilities', (done) => {
    request(app)
      .get('/api/vulnerabilities')
      .expect(200)
      .expect('Content-Type', /json/)
      .then(response => {
        const body = response.body;
        // Expect the vulnerabilities key to be an array
        if (!Array.isArray(body.vulnerabilities)) {
          return done(new Error('vulnerabilities is not an array'));
        }
        done();
      })
      .catch(err => done(err));
  });

  it('POST /api/vulnerabilities/scan should return scan results', (done) => {
    request(app)
      .post('/api/vulnerabilities/scan')
      .expect(200)
      .expect('Content-Type', /json/)
      .then(response => {
        const body = response.body;
        // Expect the response to include both npmAudit and retireJS keys
        if (!body.npmAudit || !body.retireJS) {
          return done(new Error('Scan results do not include expected keys'));
        }
        done();
      })
      .catch(err => done(err));
  });
});
